{"ast":null,"code":"var _jsxFileName = \"/Users/vickywong/Documents/doggo-mart/src/Components/Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Products from \"./Products\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Banner from \"./Banner\";\nimport Filter from \"./Filter\";\nimport Basket from \"./Basket\";\n\nfunction Home(props) {\n  const [products, setProducts] = useState([]);\n  const [cartItems, setCartItems] = usePersistedState('cartItems', []);\n  const [sortValue, setSortValue] = useState(\"ascending\");\n  const [count, setCount] = useState([]);\n\n  function usePersistedState(key, defaultValue) {\n    const [state, setState] = React.useState(JSON.parse(localStorage.getItem(key)) || defaultValue);\n    useEffect(() => {\n      localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n    return [state, setState];\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch(\"http://localhost:8000/products\");\n      const unsortedProducts = await res.json();\n      console.log(unsortedProducts, \"unsortedProducts\");\n      const sorted = sortProducts(unsortedProducts, sortValue); // set this up to combat useState not changing immediately (prevstate, result)\n\n      setProducts(sorted);\n    };\n\n    fetchData();\n  }, []);\n\n  const sortProducts = (list, sortValueToUse) => {\n    let sorted = list; // console.log(sorted, \"unsorted list\");\n\n    if (sortValueToUse === \"ascending\") {\n      sorted = list.sort((a, b) => a.price - b.price);\n    }\n\n    if (sortValueToUse === \"descending\") {\n      sorted = list.sort((a, b) => b.price - a.price);\n    } // console.log(sorted, \"sorted\");\n\n\n    return sorted;\n  }; // introducing another argument\n\n\n  const handleChangeSort = e => {\n    const newSortValue = e.target.value;\n    setSortValue(newSortValue);\n    const sorted = sortProducts(products, newSortValue);\n    setProducts(sorted); //setProducts() side effects, any of the ones that use useState setter functions = side effects\n\n    console.log(newSortValue, \"target value\");\n  };\n\n  const HandleAddToCart = (list, product) => {\n    let newCartItems = list;\n    let productAlreadyInCart = false;\n    cartItems.forEach(item => {\n      if (item.id === product.id) {\n        productAlreadyInCart = true; // item.count++;\n\n        setCartItems(products, newCartItems);\n      }\n\n      console.log(\"added\");\n    });\n\n    if (!productAlreadyInCart) {\n      const newCartItems = cartItems.push({ ...product\n      });\n      setCartItems(products, newCartItems);\n      console.log(newCartItems, \"new cart items\");\n    }\n\n    console.log(newCartItems);\n    return newCartItems;\n  }; // handleAddToCart = (e, product) => {\n  //   this.setState(state => {\n  //     const cartItems = state.cartItems;\n  //     let productAlreadyInCart = false;\n  //     cartItems.forEach(cp => {\n  //       if (cp.id === product.id) {\n  //         cp.count += 1;\n  //         productAlreadyInCart = true;\n  //       }\n  //     });\n  //     if (!productAlreadyInCart) {\n  //       cartItems.push({ ...product, count: 1 });\n  //     }\n  //     localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  //     return { cartItems: cartItems };\n  //   });\n  // };\n  // const handleRemoveFromCart =(e, item)=> {\n  //   const removedCartItems = cartItems.filter(elm => elm.id != item.id);\n  //   setCartItems(removedCartItems)\n  //   localStorage.setItem('cartItems', removedCartItems);\n  //   return removedCartItems;\n  //   };\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Banner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"homepage-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Discover better-for-you Doggos\"), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Filter, {\n    sortValue: sortValue,\n    handleChangeSort: handleChangeSort,\n    count: products.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(Products, {\n    products: products,\n    setProducts: setProducts,\n    HandleAddToCart: HandleAddToCart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Basket, {\n    cartItems: cartItems // handleRemoveFromCart={handleRemoveFromCart}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/vickywong/Documents/doggo-mart/src/Components/Home.js"],"names":["React","useState","useEffect","Products","Container","Row","Col","CardDeck","Banner","Filter","Basket","Home","props","products","setProducts","cartItems","setCartItems","usePersistedState","sortValue","setSortValue","count","setCount","key","defaultValue","state","setState","JSON","parse","localStorage","getItem","setItem","stringify","fetchData","res","fetch","unsortedProducts","json","console","log","sorted","sortProducts","list","sortValueToUse","sort","a","b","price","handleChangeSort","e","newSortValue","target","value","HandleAddToCart","product","newCartItems","productAlreadyInCart","forEach","item","id","push","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Products from \"./Products\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Banner from \"./Banner\";\nimport Filter from \"./Filter\";\nimport Basket from \"./Basket\";\n\nfunction Home(props) {\n  const [products, setProducts] = useState([]);\n  const [cartItems, setCartItems] = usePersistedState('cartItems', []);\n  const [sortValue, setSortValue] = useState(\"ascending\");\n  const [count, setCount] = useState([]);\n\n  function usePersistedState(key, defaultValue) {\n    const [state, setState] = React.useState(\n      JSON.parse(localStorage.getItem(key)) || defaultValue\n    );\n    useEffect(() => {\n      localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n    return [state, setState];\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch(\"http://localhost:8000/products\");\n      const unsortedProducts = await res.json();\n      console.log(unsortedProducts, \"unsortedProducts\");\n      const sorted = sortProducts(unsortedProducts, sortValue);\n      // set this up to combat useState not changing immediately (prevstate, result)\n      setProducts(sorted);\n    };\n    fetchData();\n  }, []);\n\n  const sortProducts = (list, sortValueToUse) => {\n    let sorted = list;\n    // console.log(sorted, \"unsorted list\");\n    if (sortValueToUse === \"ascending\") {\n      sorted = list.sort((a, b) => a.price - b.price);\n    }\n    if (sortValueToUse === \"descending\") {\n      sorted = list.sort((a, b) => b.price - a.price);\n    }\n    // console.log(sorted, \"sorted\");\n    return sorted;\n  };\n\n  // introducing another argument\n\n  const handleChangeSort = (e) => {\n    const newSortValue = e.target.value;\n    setSortValue(newSortValue);\n    const sorted = sortProducts(products, newSortValue);\n    setProducts(sorted);\n    //setProducts() side effects, any of the ones that use useState setter functions = side effects\n    console.log(newSortValue, \"target value\");\n  };\n\n  const HandleAddToCart = (list, product) => {\n    let newCartItems = list;\n    let productAlreadyInCart = false;\n\n    cartItems.forEach((item) => {\n      if (item.id === product.id) {\n        productAlreadyInCart = true;\n        // item.count++;\n        setCartItems(products, newCartItems);\n      }\n      console.log(\"added\");\n    });\n\n    if (!productAlreadyInCart) {\n      const newCartItems = cartItems.push({ ...product});\n      setCartItems(products, newCartItems);\n      console.log(newCartItems, \"new cart items\");\n    }\n    console.log(newCartItems)\n    return newCartItems;\n  };\n\n\n  // handleAddToCart = (e, product) => {\n  //   this.setState(state => {\n  //     const cartItems = state.cartItems;\n  //     let productAlreadyInCart = false;\n\n  //     cartItems.forEach(cp => {\n  //       if (cp.id === product.id) {\n  //         cp.count += 1;\n  //         productAlreadyInCart = true;\n  //       }\n  //     });\n\n  //     if (!productAlreadyInCart) {\n  //       cartItems.push({ ...product, count: 1 });\n  //     }\n  //     localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  //     return { cartItems: cartItems };\n  //   });\n  // };\n\n  // const handleRemoveFromCart =(e, item)=> {\n\n  //   const removedCartItems = cartItems.filter(elm => elm.id != item.id);\n  //   setCartItems(removedCartItems)\n  //   localStorage.setItem('cartItems', removedCartItems);\n  //   return removedCartItems;\n\n  //   };\n\n  return (\n    <div>\n      <Banner />\n      <Container>\n        <h1 className=\"homepage-title\">Discover better-for-you Doggos</h1>\n\n        <Row>\n          <Col md={9}>\n            <Filter\n              sortValue={sortValue}\n              handleChangeSort={handleChangeSort}\n              count={products.length}\n            />\n\n            <hr />\n\n            <Products\n              products={products}\n              setProducts={setProducts}\n              HandleAddToCart={HandleAddToCart}\n            />\n          </Col>\n\n          <Col>\n            <Basket\n              cartItems={cartItems}\n              // handleRemoveFromCart={handleRemoveFromCart}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}