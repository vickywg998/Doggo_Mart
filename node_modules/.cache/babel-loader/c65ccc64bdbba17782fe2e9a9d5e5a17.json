{"ast":null,"code":"var _jsxFileName = \"/Users/vickywong/Documents/doggo-mart/src/Components/Cart.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useCartItems } from \"./Hooks/useCartItems\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport util from \"../util\";\n\nconst Cart = () => {\n  const [cartItems, setCartItems] = useState(useCartItems());\n  console.log(cartItems, \"loading from cart.js\");\n\n  const handleRemoveFromCart = product => {\n    const removedCartItems = cartItems.filter(a => a.id !== product.id);\n    updateCartItemsWithHook(removedCartItems);\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"cart__page-left-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"\\u2190 Back to Shopping\")), cartItems.length === 0 ? \"Doggo Basket is empty\" : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" \", \"You have \", cartItems.length, \" different\", \" \", cartItems.length > 1 ? \"doggos\" : \"doggo\", \" to pet in the Doggo Basket.\"), React.createElement(\"div\", {\n    className: \"cart__cart-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, cartItems.length > 0 && React.createElement(React.Fragment, null, cartItems.map(item => React.createElement(\"div\", {\n    className: \"cart__line-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart-item-content-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart__product-image-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart__product-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"cart__img\",\n    src: `/products/${item.sku}.jpg`,\n    alt: item.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"cart__line-item-info-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    key: item.id,\n    className: \"cart__line-item-info-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, item.title), \" X \", item.count, \" = $\", \" \", item.price * item.count), React.createElement(Button, {\n    className: \"button_primary-color cart__line-item-x-button\" // onClick={() => handleRemoveFromCart(item)}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"X\")))))))), React.createElement(Col, {\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Order Summary\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Total:\", \" \", util.formatCurrency(cartItems.reduce((a, c) => a + c.price * c.count, 0))))), cartItems.length === 0 ? \"Doggo Basket is empty\" : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n};\n\nexport default Cart;","map":{"version":3,"sources":["/Users/vickywong/Documents/doggo-mart/src/Components/Cart.js"],"names":["React","useState","Link","useCartItems","Row","Col","Container","Button","util","Cart","cartItems","setCartItems","console","log","handleRemoveFromCart","product","removedCartItems","filter","a","id","updateCartItemsWithHook","length","map","item","sku","title","count","price","formatCurrency","reduce","c"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useCartItems } from \"./Hooks/useCartItems\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport util from \"../util\";\n\nconst Cart = () => {\n  const [cartItems, setCartItems] = useState(useCartItems());\n  console.log(cartItems, \"loading from cart.js\");\n\n  const handleRemoveFromCart = (product) => {\n    const removedCartItems = cartItems.filter((a) => a.id !== product.id);\n    updateCartItemsWithHook(removedCartItems);\n  };\n\n  \n  return (\n    <Container>\n      <Row>\n        <Col xs={7}>\n          <Link to=\"/\">\n            <Button className=\"cart__page-left-title\">\n              ‚Üê Back to Shopping\n            </Button>\n          </Link>\n          {cartItems.length === 0 ? (\n            \"Doggo Basket is empty\"\n          ) : (\n            <h3>\n              {\" \"}\n              You have {cartItems.length} different{\" \"}\n              {cartItems.length > 1 ? \"doggos\" : \"doggo\"} to pet in the Doggo\n              Basket.\n            </h3>\n          )}\n          <div className=\"cart__cart-list\">\n            {cartItems.length > 0 && (\n              <>\n                {cartItems.map((item) => (\n                  <div className=\"cart__line-item\">\n                    <div className=\"cart-item-content-container\">\n                      <div className=\"cart__product-image-container\">\n                        <div className=\"cart__product-button\">\n                          <img\n                            className=\"cart__img\"\n                            src={`/products/${item.sku}.jpg`}\n                            alt={item.title}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"cart__line-item-info-container\">\n                    \n                          <div\n                            key={item.id}\n                            className=\"cart__line-item-info-title\"\n                          >\n                            <b>{item.title}</b> X {item.count} = ${\" \"}\n                            {item.price * item.count}\n                          </div>\n                          \n                          <Button\n                            className=\"button_primary-color cart__line-item-x-button\"\n                            // onClick={() => handleRemoveFromCart(item)}\n                          >\n                            X\n                          </Button>\n                    \n                      </div>\n                      {/* <div>\n                        {\" \"}\n                        <p className=\"cart__line-item-info-title\">\n                          {item.description}\n                        </p>\n                      </div> */}\n                    </div>\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n        </Col>\n\n        <Col xs={3}>\n          <p>Order Summary</p>\n          <p>\n            Total:{\" \"}\n            {util.formatCurrency(\n              cartItems.reduce((a, c) => a + c.price * c.count, 0)\n            )}\n          </p>\n        </Col>\n      </Row>\n\n      {cartItems.length === 0 ? \"Doggo Basket is empty\" : <div></div>}\n    </Container>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}